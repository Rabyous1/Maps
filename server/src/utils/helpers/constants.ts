const Countries = [
  
  'Afghanistan',
  'Åland Islands',
  'Albania',
  'Algeria',
  'American Samoa',
  'Andorra',
  'Angola',
  'Anguilla',
  'Antarctica',
  'Antigua and Barbuda',
  'Argentina',
  'Armenia',
  'Aruba',
  'Australia',
  'Austria',
  'Azerbaijan',
  'Bahamas',
  'Bahrain',
  'Bangladesh',
  'Barbados',
  'Belarus',
  'Belgium',
  'Belize',
  'Benin',
  'Bermuda',
  'Bhutan',
  'Bolivia',
  'Bosnia and Herzegovina',
  'Botswana',
  'Bouvet Island',
  'Brazil',
  'British Indian Ocean Territory',
  'Brunei Darussalam',
  'Bulgaria',
  'Burkina Faso',
  'Burundi',
  'Cambodia',
  'Cameroon',
  'Canada',
  'Cape Verde',
  'Cayman Islands',
  'Central African Republic',
  'Chad',
  'Chile',
  'China',
  'Christmas Island',
  'Cocos (Keeling) Islands',
  'Colombia',
  'Comoros',
  'Congo',
  'Democratic Republic of the Congo',
  'Cook Islands',
  'Costa Rica',
  "Cote D'Ivoire",
  'Croatia',
  'Cuba',
  'Cyprus',
  'Czech Republic',
  'Denmark',
  'Djibouti',
  'Dominica',
  'Dominican Republic',
  'Ecuador',
  'Egypt',
  'El Salvador',
  'Equatorial Guinea',
  'Eritrea',
  'Estonia',
  'Ethiopia',
  'Falkland Islands (Malvinas)',
  'Faroe Islands',
  'Fiji',
  'Finland',
  'France',
  'French Guiana',
  'French Polynesia',
  'French Southern Territories',
  'Gabon',
  'Gambia',
  'Georgia',
  'Germany',
  'Ghana',
  'Gibraltar',
  'Greece',
  'Greenland',
  'Grenada',
  'Guadeloupe',
  'Guam',
  'Guatemala',
  'Guernsey',
  'Guinea',
  'Guinea-Bissau',
  'Guyana',
  'Haiti',
  'Heard Island and Mcdonald Islands',
  'Holy See (Vatican City State)',
  'Honduras',
  'Hong Kong',
  'Hungary',
  'Iceland',
  'India',
  'Indonesia',
  'Iran, Islamic Republic Of',
  'Iran',
  'Iraq',
  'Ireland',
  'Isle of Man',
  'Israel',
  'Italy',
  'Jamaica',
  'Japan',
  'Jersey',
  'Jordan',
  'Kazakhstan',
  'Kenya',
  'Kiribati',
  "Korea, Democratic People's Republic of",
  'Korea, Republic of',
  'Kuwait',
  'Kyrgyzstan',
  "Lao People's Democratic Republic",
  'Latvia',
  'Lebanon',
  'Lesotho',
  'Liberia',
  'Libya',
  'Liechtenstein',
  'Lithuania',
  'Luxembourg',
  'Macao',
  'Macedonia, The Former Yugoslav Republic of',
  'Madagascar',
  'Malawi',
  'Malaysia',
  'Maldives',
  'Mali',
  'Malta',
  'Marshall Islands',
  'Martinique',
  'Mauritania',
  'Mauritius',
  'Mayotte',
  'Mexico',
  'Micronesia, Federated States of',
  'Moldova, Republic of',
  'Monaco',
  'Mongolia',
  'Montenegro',
  'Montserrat',
  'Morocco',
  'Mozambique',
  'Myanmar',
  'Namibia',
  'Nauru',
  'Nepal',
  'Netherlands',
  'Netherlands Antilles',
  'New Caledonia',
  'New Zealand',
  'Nicaragua',
  'Niger',
  'Nigeria',
  'Niue',
  'Norfolk Island',
  'Northern Cyprus',
  'Northern Mariana Islands',
  'Norway',
  'Oman',
  'Pakistan',
  'Palau',
  'Palestine',
  'Panama',
  'Papua New Guinea',
  'Paraguay',
  'Peru',
  'Philippines',
  'Pitcairn',
  'Poland',
  'Portugal',
  'Puerto Rico',
  'Qatar',
  'Reunion',
  'Romania',
  'Russia',
  'Rwanda',
  'Saint Helena',
  'Saint Kitts and Nevis',
  'Saint Lucia',
  'Saint Pierre and Miquelon',
  'Saint Vincent and the Grenadines',
  'Samoa',
  'San Marino',
  'Sao Tome and Principe',
  'Saudi Arabia',
  'Senegal',
  'Serbia',
  'Seychelles',
  'Siachen Glacier',
  'Sierra Leone',
  'Singapore',
  'Slovakia',
  'Slovenia',
  'Solomon Islands',
  'Somalia',
  'South Africa',
  'South Georgia and the South Sandwich Islands',
  'Spain',
  'Sri Lanka',
  'Sudan',
  'Suriname',
  'Swaziland',
  'Sweden',
  'Switzerland',
  'Syrian Arab Republic',
  'Taiwan, Province of China',
  'Tajikistan',
  'Tanzania, United Republic of',
  'Tanzania',
  'Thailand',
  'Timor-Leste',
  'Togo',
  'Tokelau',
  'Tonga',
  'Trinidad and Tobago',
  'Tunisia',
  'Turkey',
  'Turkmenistan',
  'Turks and Caicos Islands',
  'Tuvalu',
  'Uganda',
  'Ukraine',
  'United Arab Emirates',
  'United Kingdom',
  'United States',
  'United States Minor Outlying Islands',
  'Uruguay',
  'Uzbekistan',
  'Vanuatu',
  'Venezuela',
  'Viet Nam',
  'Virgin Islands, British',
  'Virgin Islands, U.S.',
  'Wallis and Futuna',
  'Western Sahara',
  'Yemen',
  'Zambia',
  'Zimbabwe'
];
const Countriess = [
  
  'Afghanistan',
  'Åland Islands',
  'Albania',
  'Algeria',
  'American Samoa',
  'Andorra',
  'Angola',
  'Anguilla',
  'Antarctica',
  'Antigua and Barbuda',
  'Argentina',
  'Armenia',
  'Aruba',
  'Australia',
  'Austria',
  'Azerbaijan',
  'Bahamas',
  'Bahrain',
  'Bangladesh',
  'Barbados',
  'Belarus',
  'Belgium',
  'Belize',
  'Benin',
  'Bermuda',
  'Bhutan',
  'Bolivia',
  'Bosnia and Herzegovina',
  'Botswana',
  'Bouvet Island',
  'Brazil',
  'British Indian Ocean Territory',
  'Brunei Darussalam',
  'Bulgaria',
  'Burkina Faso',
  'Burundi',
  'Cambodia',
  'Cameroon',
  'Canada',
  'Cape Verde',
  'Cayman Islands',
  'Central African Republic',
  'Chad',
  'Chile',
  'China',
  'Christmas Island',
  'Cocos (Keeling) Islands',
  'Colombia',
  'Comoros',
  'Congo',
  'Democratic Republic of the Congo',
  'Cook Islands',
  'Costa Rica',
  "Cote D'Ivoire",
  'Croatia',
  'Cuba',
  'Cyprus',
  'Czech Republic',
  'Denmark',
  'Djibouti',
  'Dominica',
  'Dominican Republic',
  'Ecuador',
  'Egypt',
  'El Salvador',
  'Equatorial Guinea',
  'Eritrea',
  'Estonia',
  'Ethiopia',
  'Falkland Islands (Malvinas)',
  'Faroe Islands',
  'Fiji',
  'Finland',
  'France',
  'French Guiana',
  'French Polynesia',
  'French Southern Territories',
  'Gabon',
  'Gambia',
  'Georgia',
  'Germany',
  'Ghana',
  'Gibraltar',
  'Greece',
  'Greenland',
  'Grenada',
  'Guadeloupe',
  'Guam',
  'Guatemala',
  'Guernsey',
  'Guinea',
  'Guinea-Bissau',
  'Guyana',
  'Haiti',
  'Heard Island and Mcdonald Islands',
  'Holy See (Vatican City State)',
  'Honduras',
  'Hong Kong',
  'Hungary',
  'Iceland',
  'India',
  'Indonesia',
  'Iran, Islamic Republic Of',
  'Iran',
  'Iraq',
  'Ireland',
  'Isle of Man',
  'Israel',
  'Italy',
  'Jamaica',
  'Japan',
  'Jersey',
  'Jordan',
  'Kazakhstan',
  'Kenya',
  'Kiribati',
  "Korea, Democratic People's Republic of",
  'Korea, Republic of',
  'Kuwait',
  'Kyrgyzstan',
  "Lao People's Democratic Republic",
  'Latvia',
  'Lebanon',
  'Lesotho',
  'Liberia',
  'Libya',
  'Liechtenstein',
  'Lithuania',
  'Luxembourg',
  'Macao',
  'Macedonia, The Former Yugoslav Republic of',
  'Madagascar',
  'Malawi',
  'Malaysia',
  'Maldives',
  'Mali',
  'Malta',
  'Marshall Islands',
  'Martinique',
  'Mauritania',
  'Mauritius',
  'Mayotte',
  'Mexico',
  'Micronesia, Federated States of',
  'Moldova, Republic of',
  'Monaco',
  'Mongolia',
  'Montenegro',
  'Montserrat',
  'Morocco',
  'Mozambique',
  'Myanmar',
  'Namibia',
  'Nauru',
  'Nepal',
  'Netherlands',
  'Netherlands Antilles',
  'New Caledonia',
  'New Zealand',
  'Nicaragua',
  'Niger',
  'Nigeria',
  'Niue',
  'Norfolk Island',
  'Northern Cyprus',
  'Northern Mariana Islands',
  'Norway',
  'Oman',
  'Pakistan',
  'Palau',
  'Palestine',
  'Panama',
  'Papua New Guinea',
  'Paraguay',
  'Peru',
  'Philippines',
  'Pitcairn',
  'Poland',
  'Portugal',
  'Puerto Rico',
  'Qatar',
  'Reunion',
  'Romania',
  'Russia',
  'Rwanda',
  'Saint Helena',
  'Saint Kitts and Nevis',
  'Saint Lucia',
  'Saint Pierre and Miquelon',
  'Saint Vincent and the Grenadines',
  'Samoa',
  'San Marino',
  'Sao Tome and Principe',
  'Saudi Arabia',
  'Senegal',
  'Serbia',
  'Seychelles',
  'Siachen Glacier',
  'Sierra Leone',
  'Singapore',
  'Slovakia',
  'Slovenia',
  'Solomon Islands',
  'Somalia',
  'South Africa',
  'South Georgia and the South Sandwich Islands',
  'Spain',
  'Sri Lanka',
  'Sudan',
  'Suriname',
  'Swaziland',
  'Sweden',
  'Switzerland',
  'Syrian Arab Republic',
  'Taiwan, Province of China',
  'Tajikistan',
  'Tanzania, United Republic of',
  'Tanzania',
  'Thailand',
  'Timor-Leste',
  'Togo',
  'Tokelau',
  'Tonga',
  'Trinidad and Tobago',
  'Tunisia',
  'Turkey',
  'Turkmenistan',
  'Turks and Caicos Islands',
  'Tuvalu',
  'Uganda',
  'Ukraine',
  'United Arab Emirates',
  'United Kingdom',
  'United States',
  'United States Minor Outlying Islands',
  'Uruguay',
  'Uzbekistan',
  'Vanuatu',
  'Venezuela',
  'Viet Nam',
  'Virgin Islands, British',
  'Virgin Islands, U.S.',
  'Wallis and Futuna',
  'Western Sahara',
  'Yemen',
  'Zambia',
  'Zimbabwe'
]as const;
enum InterestStatus {
    INTERESTED = 'Interested',
    MAYBE = 'Maybe',
    NOT_INTERESTED = 'Not Interested',
    NOT_MENTIONED = 'Not Mentioned',
}
enum ApplicationStatus {
    REJECTED = 'Rejected',
    PENDING = 'Pending',
    ACCEPTED = 'Accepted',
}
enum NotificationTypes {
    JOB_ALERT = 'Job_Alert',
    APPLICATION_STATUS = 'Application_Status',
    APPLICATION_SENT = 'Application_Sent',
    MESSAGE = 'Message',
    PROFILE_VIEWED = 'Profile_Viewed',
    SYSTEM = 'System',
    OPPORTUNITY_CREATED = 'Opportunity_Created',
    OPPORTUNITY_ARCHIVED = 'Opportunity_Archived',
    OPPORTUNITY_UNARCHIVED = 'Opportunity_Unarchived',
    NEW_APPLICATION = 'New Application',
    APPLICATION_STATUS_UPDATED = 'Application_Status_Updated',
    MISSED_CALL = 'Call Missed',
    INTERVIEW_SCHEDULED = 'INTERVIEW_SCHEDULED',
    INTERVIEW_CANCELLED = 'INTERVIEW_CANCELLED',
}
enum Role {
    USER = 'user',
    ADMIN = 'Admin',
    CANDIDAT = 'Candidat',
    RECRUTEUR = 'Recruteur',
    SOURCING_SPECIALIST = 'Sourcing specialist',
    SOURCING_MANAGER = 'Sourcing manager',
    COMMERCIAL = 'Commercial',
    COMMERCIAL_MANAGER = 'Commercial manager',
    DEVELOPER = 'Developer',
    VALIDATOR = 'Validator',
}
enum JobStatus {
    ACTIVE = 'Active',
    EXPIRED = 'Expired',
    FILLED = 'Filled'
}

enum OpportunityType {
    CONFIDENTIAL = 'Confidential',
    DIRECT_HIRE = 'Direct Hire',
    TENDER = 'Tender',
    CAPABILITY = 'Capability',
    PAYROLL = 'Payroll',
    IN_HOUSE = 'In House',
    RECRUTEMENT = 'Recrutement',
    CONSULTING = 'Consulting',
    NOT_SPECIFIED = 'Not specified',
}

enum Visibility {
    Public = "Public",
    Draft = "Draft",
  }
  
  enum Language {
    FRENCH = "fr",
    ENGLISH = "en",
  } 
  enum Industry {

    BANKING = 'Banking',
    TRANSPORTATION = 'Transportation',
    IT_TELECOM = 'IT & Telecom',
    ENERGIES = 'Energies',
    PHARMACEUTICAL = 'Pharmaceutical',
    OTHER = 'Other',
  }  
enum Source {
    HUNTER = 'hunter',
    EXTERIEUR = 'exterieur',
}
enum WorkMode {
    ON_SITE = 'on_site',
    REMOTE = 'remote',
    HYBRID = 'hybrid',
}

enum EmploymentType {
    FULL_TIME = 'full_time',
    PART_TIME = 'part_time',
    
}  
enum ContractType {
    PERMANENT = 'Permanent',
    FIXED_TERM = 'Fixed Term',
    FREELANCE = 'Freelance',
    TEMPORARY = 'Temporary',
    INTERNSHIP = 'Internship',
    APPRENTICESHIP = 'Apprenticeship ',
    CIVIC_SERVICE = 'Civic Service ',
    OTHER = 'Other',
}
  
enum LegalStatus {
    SARL = 'SARL',
    SA = 'SA',
    SAS = 'SAS',
    SASU = 'SASU',
    EURL = 'EURL',
    AUTO_ENTREPRENEUR = 'AUTO_ENTREPRENEUR',
    ONG = 'ONG',
    AUTRE = 'AUTRE',
}


 enum candidateStatus {
     New = 'New',
     Active = 'Active',
     Inactive = 'Inactive',
     Blacklisted = 'Blacklisted',
 }
 enum LanguageLevel {
     Elementary = 'Elementary',
     LimitedWorking = 'Limited working',
     ProfessionalWorking = 'Professional working',
     FullProfessional = 'Full professional',
     Native = 'Native',
 }
 enum LanguageName {
     Afrikaans = 'Afrikaans',
     Albanian = 'Albanian',
     Amharic = 'Amharic',
     Arabic = 'Arabic',
     Armenian = 'Armenian',
     Azerbaijani = 'Azerbaijani',
     Basque = 'Basque',
     Belarusian = 'Belarusian',
     Bengali = 'Bengali',
     Bosnian = 'Bosnian',
     Bulgarian = 'Bulgarian',
     Burmese = 'Burmese',
     Catalan = 'Catalan',
     Cebuano = 'Cebuano',
     Chinese = 'Chinese',
     Croatian = 'Croatian',
     Czech = 'Czech',
     Danish = 'Danish',
     Dutch = 'Dutch',
     English = 'English',
     Estonian = 'Estonian',
     Filipino = 'Filipino',
     Finnish = 'Finnish',
     French = 'French',
     Georgian = 'Georgian',
     German = 'German',
     Greek = 'Greek',
     Gujarati = 'Gujarati',
     HaitianCreole = 'Haitian Creole',
     Hausa = 'Hausa',
     Hebrew = 'Hebrew',
     Hindi = 'Hindi',
     Hmong = 'Hmong',
     Hungarian = 'Hungarian',
     Icelandic = 'Icelandic',
     Igbo = 'Igbo',
     Indonesian = 'Indonesian',
     Irish = 'Irish',
     Italian = 'Italian',
     Japanese = 'Japanese',
     Javanese = 'Javanese',
     Kannada = 'Kannada',
     Kazakh = 'Kazakh',
     Khmer = 'Khmer',
     Kinyarwanda = 'Kinyarwanda',
     Korean = 'Korean',
     Kurdish = 'Kurdish',
     Kyrgyz = 'Kyrgyz',
     Lao = 'Lao',
     Latin = 'Latin',
     Latvian = 'Latvian',
     Lithuanian = 'Lithuanian',
     Luxembourgish = 'Luxembourgish',
     Macedonian = 'Macedonian',
     Malagasy = 'Malagasy',
     Malay = 'Malay',
     Malayalam = 'Malayalam',
     Maltese = 'Maltese',
     Maori = 'Maori',
     Marathi = 'Marathi',
     Mongolian = 'Mongolian',
     Nepali = 'Nepali',
     Norwegian = 'Norwegian',
     Pashto = 'Pashto',
     Persian = 'Persian',
     Polish = 'Polish',
     Portuguese = 'Portuguese',
     Punjabi = 'Punjabi',
     Romanian = 'Romanian',
     Russian = 'Russian',
     Samoan = 'Samoan',
     Serbian = 'Serbian',
     Shona = 'Shona',
     Sindhi = 'Sindhi',
     Sinhala = 'Sinhala',
     Slovak = 'Slovak',
     Slovenian = 'Slovenian',
     Somali = 'Somali',
     Spanish = 'Spanish',
     Sundanese = 'Sundanese',
     Swahili = 'Swahili',
     Swedish = 'Swedish',
     Tamil = 'Tamil',
     Tatar = 'Tatar',
     Telugu = 'Telugu',
     Thai = 'Thai',
     Turkish = 'Turkish',
     Turkmen = 'Turkmen',
     Ukrainian = 'Ukrainian',
     Urdu = 'Urdu',
     Uzbek = 'Uzbek',
     Vietnamese = 'Vietnamese',
     Welsh = 'Welsh',
     Xhosa = 'Xhosa',
     Yiddish = 'Yiddish',
     Yoruba = 'Yoruba',
     Zulu = 'Zulu',
 }
 export function transformContractTypeData(rawData: { contractType: string; count: number }[]) {
     return Object.values(ContractType).map(contractType => ({
         contractType,
         count: rawData.find(item => item.contractType === contractType)?.count || 0,
     }));
 }

 export function transformEmploymentTypeData(rawData: { employmentType: string; count: number }[]) {
     return Object.values(EmploymentType).map(employmentType => ({
         employmentType,
         count: rawData.find(item => item.employmentType === employmentType)?.count || 0,
     }));
 }

 export function transformWorkModeData(rawData: { workMode: string; count: number }[]) {
     return Object.values(WorkMode).map(workMode => ({
         workMode,
         count: rawData.find(item => item.workMode === workMode)?.count || 0,
     }));
 }

 export function transformVisibilityData(rawData: { visibility: string; count: number }[]) {
     return Object.values(Visibility).map(visibility => ({
         visibility,
         count: rawData.find(item => item.visibility === visibility)?.count || 0,
     }));
 }

 export function transformTypeData(rawData: { type: string; count: number }[]) {
     return Object.values(OpportunityType).map(type => ({
         type,
         count: rawData.find(item => item.type === type)?.count || 0,
     }));
 }

 export function transformJobStatusData(rawData: { jobStatus: string; count: number }[]) {
     return Object.values(JobStatus).map(jobStatus => ({
         jobStatus,
         count: rawData.find(item => item.jobStatus === jobStatus)?.count || 0,
     }));
 }

 export function transformProfileStatusData(rawData: { profileStatus: string; count: number }[]) {
     return Object.values(candidateStatus).map(profileStatus => ({
         profileStatus,
         count: rawData.find(item => item.profileStatus === profileStatus)?.count || 0,
     }));
 }
 export function transformApplicationStatusData(rawData: { applicationStatus: string; count: number }[]) {
     return Object.values(ApplicationStatus).map(applicationStatus => ({
         applicationStatus,
         count: rawData.find(item => item.applicationStatus === applicationStatus)?.count || 0,
     }));
 }

 export {
     ApplicationStatus,
     Role,
     Industry,
     InterestStatus,
     Countries,
     candidateStatus,
     LegalStatus,
     EmploymentType,
     WorkMode,
     ContractType,
     Source,
     OpportunityType,
     JobStatus,
     LanguageLevel,
     LanguageName,
     Language,
     Visibility,
     NotificationTypes,
 };

